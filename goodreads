#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Goodreads Analyzer 1.0
#
# apt-get install python-requests python-matplotlib
#
# https://www.goodreads.com/shelf/show/cyberpunk?page=1 1 - 25 (1250
# https://www.goodreads.com/shelf/show/science-fiction?page=1 - 25 (1250)
# https://www.goodreads.com/list/show/19341.Best_Science_Fiction?page=1 - 29 (2827)
#

import sqlite3,requests,StringIO,lxml.html,time,sys,re

GOOD='https://www.goodreads.com'
CYBER = GOOD + '/shelf/show/cyberpunk'

FOX = '/home/user/.mozilla/firefox/2wfpvx7b.default/cookies.sqlite'

#--------------------------------------

print('Goodreads Analyzer 1.0')

# COOKIE

# https://goodreads.com -> Remember login -> Login -> Quit)

COOKIES={}

#conn = sqlite3.connect(FOX)
#cur = conn.cursor()
#cur.execute("SELECT name,value FROM moz_cookies WHERE host = 'www.goodreads.com'")
#rows = cur.fetchall()
#for name,value in rows: COOKIES[name] = value

# HARVEST & PARSE

DATASET = {}

#for i = 1 to 25
#req = requests.get(CYBER + '?page=2', cookies=COOKIES)
#if req.status_code == 200:
#	f.write(req.text.encode('utf-8'))
#time.sleep(1)

f = open('test.html', 'r')

p = lxml.html.HTMLParser()
t = lxml.html.parse(StringIO.StringIO(f.read()),p)
o = t.xpath("//div[@class='elementList']")

for i in range(0,len(o)):

	#<a class="bookTitle" href="/book/show/10084.River_of_Blue_Fire">River of Blue Fire (Otherland, #2)</a>

	book = o[i].xpath(".//a[contains(@class,'bookTitle')]")
	
	if book:
		book_title = book[0].text.encode('utf-8')
		book_url = book[0].get('href').encode('utf-8')
		book_id = re.sub('.*/(\d+)\..*', '\\1', book_url)

	#<a class="authorName" itemprop="url" href="https://www.goodreads.com/author/show/426034.Lauren_Beukes">
	#	<span itemprop="name">Lauren Beukes</span>
	#/a>

	author = o[i].xpath(".//a[contains(@class,'authorName')]//span")

	if author:
		book_author = author[0].text.encode('utf-8')

	#<span class="greyText smallText">
	#	avg rating 4.01 —
	#	2,206 ratings  —
	#	published 1989
	#</span>

	data = o[i].xpath(".//span[contains(@class,'greyText smallText')]")

	if data:
		#g = open('line.bin', 'w')
		#g.write(data[0].text.encode('utf-8'))
		#g.close()

		#book_avg = re.match('avg rating', data[0].text)

		#book_ratings = re.sub('(.*)ratings.*', '\\1', data[0].text)
		#print(book_ratings)
		#book_published = re.sub('^.*published (.*)', '\\1', data[0].text)
		#print(book_published)

		sys.exit(1)


f.close()

# PLOT

# FILTER

